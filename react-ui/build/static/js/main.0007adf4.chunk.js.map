{"version":3,"sources":["components/NavBarLinks.jsx","components/NavBar.jsx","components/Media.jsx","components/MediaCard.jsx","components/Home.jsx","components/SearchBar.jsx","components/Search.jsx","components/Favourites.jsx","components/Container.jsx","App.js","serviceWorker.js","index.js","kisspng-logo-nasa-insignia-vector-graphics-portable-networ-vasper-5c0bc49343c935.1278996415442750912777.png","istockphoto-1141690154-170667a.jpg"],"names":["useStyles","makeStyles","theme","links","textDecoration","color","pressed","NavBar","props","classes","location","useLocation","pathname","link","to","className","replace","toLowerCase","includes","root","top","zIndex","marginBottom","bar","backgroundColor","toolbar","display","justifyContent","button","marginRight","spacing","img","justifySelf","useHistory","Grid","item","xs","container","AppBar","position","Toolbar","MenuItem","map","n","Button","height","src","nasaLogo","Media","CardMedia","url","width","component","image","card","marginTop","cards","border","actions","MediaCard","id","key","Card","CardActionArea","imgUrl","CardHeader","title","CardContent","Typography","variant","description","_id","CardActions","isSaved","IconButton","onClick","handleDelete","icon","handleSave","axios","require","apiKey","process","NASA_API_KEY","progress","Home","useState","apod","setAstronomy","isLoading","setIsLoading","useEffect","get","then","a","data","explanation","justify","align","CircularProgress","multilineColor","textField","borderColor","SearchBar","search","setSearch","TextField","label","fullWidth","margin","InputLabelProps","shrink","InputProps","startAdornment","value","onChange","e","target","type","onKeyDown","which","handleSearch","padding","paddingTop","Search","results","setResults","checkIfSaved","imgId","favouriteImages","find","f","alignItems","allResults","res","collection","items","forEach","i","l","render","href","nasa_id","push","length","searchPic","root1","root2","paddingBottom","Favourites","imageDb","setImageDb","match","imageId","params","getAllImages","style","Container","setFavouriteImages","images","allImages","imageFound","post","handleClick","delete","exact","path","flexGrow","snackbar","App","open","message","setOpen","direction","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.0007adf4.chunk.js","sourcesContent":["import React from 'react'\nimport {Link, useLocation} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n      textDecoration: 'none',\n      color: 'grey'\n    },\n    pressed: {\n        color: 'white'\n    }\n}))\n\nexport default function NavBar(props) {\n\n    const classes = useStyles();\n    let location = useLocation().pathname\n    if(props.link === 'Home') {\n        return (\n            <Link to={`/`} className={`${classes.links} ${location === '/' && classes.pressed}`}>\n                {props.link}\n            </Link>\n        )\n    } else {\n        return (\n            <Link \n                to={`/${props.link.replace(\" \", \"\").toLowerCase()}`} \n                className={`${classes.links} ${location.includes(props.link.toLowerCase().replace(\" \", \"\")) && classes.pressed}`}\n            >\n                {props.link}\n            </Link>\n        )\n    }\n} ","import React from 'react'\nimport NavBarLinks from './NavBarLinks'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Grid, Button, MenuItem } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport nasaLogo from '../kisspng-logo-nasa-insignia-vector-graphics-portable-networ-vasper-5c0bc49343c935.1278996415442750912777.png'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      top: 0,\n      zIndex: 9999,\n      marginBottom: '60px'\n    },\n    bar:{\n        backgroundColor: '#290d5e',\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    button: {\n        marginRight: theme.spacing(2),\n    },\n    img: {\n        justifySelf: 'end'\n    }\n}))\n\nexport default function NavBar() {\n\n    const userLinks = ['Home', 'Search' ,'Favourites']\n    const classes = useStyles();\n\n    const history = useHistory();\n    \n    return (\n        <Grid item className={classes.root} xs={12} container>\n            <AppBar position=\"fixed\" className={classes.bar}>\n                <Toolbar className={classes.toolbar}>\n                    <MenuItem>\n                    {userLinks.map(n => \n                        <Button className={classes.button} color=\"inherit\">\n                            <NavBarLinks link={n} />\n                        </Button>)\n                    }\n                    </MenuItem>\n                    <MenuItem>\n                        <img className={classes.img} height='60px' src={nasaLogo}/>\n                    </MenuItem>\n                </Toolbar>   \n            </AppBar>   \n        </Grid>\n    )\n}","import React from 'react';\nimport ReactPlayer from 'react-player'\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\nexport default function Media(props) {\n    \n    if(props.link.includes('youtube.com')){\n        return (\n            <CardMedia>\n                <ReactPlayer url={props.link} width='100%'/>\n            </CardMedia>\n        )\n    } else {\n        return (\n            <CardMedia\n                component=\"img\"\n                height='50%' width='100%'\n                image={props.link}\n            />\n        )\n    }\n    \n}","import React from 'react';\nimport {Link, useLocation} from 'react-router-dom'\nimport Media from './Media'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardActionArea, CardActions, CardContent, Grid, IconButton } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: '20px',\n        marginBottom: '20px'\n    },\n    cards: {\n        border: '0.1px groove #bca9f3'\n    },\n    actions: {\n        justifyContent: 'center'\n    },\n    img: {\n        width: '100%',\n        height: '40vh'\n    }\n  });\n\nexport default function MediaCard(props) {\n    const { image } = props\n    const classes = useStyles();\n    let location = useLocation().pathname\n\n    const handleSave = () => {\n        image.isSaved = true\n        props.handleSave(image)\n    }\n\n    const handleDelete = () => {\n        image.isSaved = false\n        props.handleDelete(image._id)\n    }\n\n    if(location === '/' || location.includes('favourite/')) {\n        return(\n            <Grid item xs={11} container id={image.key}>\n                <Card className={classes.card}>\n                    <CardActionArea>\n                        <Media link={image.imgUrl}/>\n                        <CardHeader \n                            title={image.title}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                {image.description}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n        )\n    } else {\n        return (\n                <Card className={`${classes.card} ${classes.cards}`} id={image.key}>\n                    <CardActionArea>\n                        {location.includes('search') \n                            ?   <img className={classes.img} src={image.imgUrl} />\n                            :   <Link to={`/favourite/${image._id}`}>\n                                    <img className={classes.img} src={image.imgUrl}/>\n                                </Link>\n                        }\n                        <CardHeader \n                            title={image.title}\n                        />\n                    </CardActionArea>\n                    <CardActions className={classes.actions}>\n                        {image.isSaved                        \n                            ?   <IconButton onClick={handleDelete} className={classes.icon}> <ThumbDownIcon /> </IconButton>\n                            :   <IconButton onClick={handleSave} className={classes.icon}> <ThumbUpAltIcon/> </IconButton>\n                        }\n                    </CardActions> \n                </Card>\n        )\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport MediaCard from \"./MediaCard\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst axios = require(\"axios\");\n// const apiKey = require('../API_Key').ApiKey\nconst apiKey = process.env.NASA_API_KEY;\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"20px\",\n  },\n  progress: {\n    marginTop: \"50px\",\n  },\n});\n\nexport default function Home() {\n  const [apod, setAstronomy] = useState({\n    title: \"\",\n    img: \"\",\n    description: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios\n      .get(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}`)\n      .then((a) => {\n        setAstronomy({\n          title: a.data.title,\n          imgUrl: a.data.url,\n          description: a.data.explanation,\n        });\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <Grid\n      className={classes.root}\n      item\n      xs={12}\n      container\n      justify=\"center\"\n      align=\"center\"\n    >\n      {isLoading ? (\n        <CircularProgress className={classes.progress} />\n      ) : (\n        <MediaCard image={apod} />\n      )}\n    </Grid>\n  );\n}\n","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    multilineColor: {\n        color: 'white'\n    },\n    textField: {\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"white\"\n        },\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"white\"\n        },\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"white\"\n        },\n        \"& .MuiOutlinedInput-input\": {\n        color: \"white\"\n        },\n        \"&:hover .MuiOutlinedInput-input\": {\n        color: \"white\"\n        },\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n        color: \"white\"\n        },\n        \"& .MuiInputLabel-outlined\": {\n        color: \"white\"\n        },\n        \"&:hover .MuiInputLabel-outlined\": {\n        color: \"white\"\n        },\n        \"& .MuiInputLabel-outlined.Mui-focused\": {\n        color: \"white\"\n        }\n    }\n});\n\nexport default function SearchBar(props) {\n\n    const [search, setSearch] = useState('')\n    const classes = useStyles();\n\n    const handleChange = (e) => {\n        setSearch(e.target.value)\n    }\n\n    const handlePress = (e) => {\n        if(e.which === 13) {\n            props.handleSearch(search)\n        }\n    }\n\n    return (\n        <TextField \n            id=\"outlined-full-width\" \n            label='Search through space' \n            className={classes.textField}\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n                shrink: true\n              }}\n            InputProps={{\n                startAdornment: <SearchIcon position=\"center\" />,\n                className: classes.multilineColor\n            }}\n            variant=\"outlined\"\n            value={search} onChange={handleChange} \n            type=\"text\" \n            onKeyDown={handlePress}\n            \n        />\n    )\n\n}","import React, {useState} from 'react';\nimport MediaCard from './MediaCard'\nimport SearchBar from './SearchBar'\nimport { Grid, Card, CardContent, CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport searchPic from '../istockphoto-1141690154-170667a.jpg'\n\nconst axios = require('axios')\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '20px',\n        marginBottom: '20px'\n    },\n    card:{\n        backgroundColor: '#150f2b',\n        padding: '15px',\n        paddingTop: '5px',\n    }\n});\n\nexport default function Search(props) {\n\n    const [results, setResults] = useState([])\n    const classes = useStyles();\n\n    const handleSearch = (value) => {\n        setResults([])\n        const allResults = []\n        axios.get(`https://images-api.nasa.gov/search?q=${value}`)\n            .then(res => {\n                res.data.collection.items.forEach(i => {\n                    if(i. links) {\n                        const imgUrl = i.links.find(l => l.render === 'image').href\n                        if(imgUrl) {\n                            const image = {\n                                _id: i.data[0].nasa_id, \n                                title: i.data[0].title, \n                                imgUrl, \n                                description: i.data[0].description,\n                                isSaved: checkIfSaved(i.data[0].nasa_id)\n                            }\n                            allResults.push(image)\n                        }\n                    }\n                })\n                setResults(allResults)\n            })\n    }\n\n    const checkIfSaved = imgId => props.favouriteImages.find(f => f._id === imgId)\n\n    return (\n        <Grid item className={classes.root} container xs={11} alignItems='center'>\n            <Card className={classes.card}>\n                <SearchBar handleSearch={handleSearch} />\n                <Grid item  xs={12} container justify=\"center\" align=\"center\" container>\n                    <CardContent>\n                        {results.length > 0 \n                                ?   results.map( image => \n                                        <MediaCard \n                                            key={image.id} \n                                            image={image} \n                                            favouriteImages={props.favouriteImages}\n                                            handleSave={props.handleSave}\n                                            handleDelete={props.handleDelete}\n                                        />\n                                    )\n                                :   <CardMedia\n                                        component=\"img\"\n                                        width='100%'\n                                        image={searchPic}\n                                    />\n                        }\n                    </CardContent>\n                </Grid>   \n            </Card>\n        </Grid>   \n    )\n}","import React, {useState, useEffect, Fragment} from 'react';\nimport MediaCard from './MediaCard'\nimport { Grid, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root1: {\n        marginBottom: '20px'\n    },\n    root2: {\n        marginTop: '20px',\n        marginBottom: '20px'\n    },\n    card:{\n        backgroundColor: '#150f2b',\n        padding: '15px',\n        paddingTop: '5px',\n    },\n    title: {\n        color: 'white',\n        paddingBottom: '0px'\n    }\n});\n\nconst axios = require('axios')\n\nexport default function Favourites(props) {\n    \n    const [imageDb, setImageDb] = useState({}) \n    const classes = useStyles();\n\n    useEffect(() => {\n        if(props.match) {\n            const {imageId} = props.match.params\n            axios.get(`http://localhost:3001/images/${imageId}`)\n                .then(image => {\n                    setImageDb(image.data)\n                })\n        } \n    }, [props.match])\n\n    useEffect(() => {\n        props.getAllImages()\n    }, [])\n\n    return (\n        <Fragment>\n                {imageDb.title \n                    ?   <Grid item className={classes.root1} xs={12} justify='center' align='center'>\n                            <MediaCard \n                                key={imageDb._id} \n                                image={imageDb} \n                                handleSave={props.handleSave}\n                                handleDelete={props.handleDelete}\n                            />\n                        </Grid>\n                    :   <Grid item className={classes.root2} xs={11} container justify='center' align='center'>\n                            <Card className={classes.card}> \n                                <Grid item  xs={12} container justify=\"center\" align=\"center\" container>\n                                    <CardHeader \n                                        title='Favourites:'\n                                        className={classes.title}\n                                    />\n                                    <CardContent style={{paddingTop: '0px'}}>\n                                        {props.favouriteImages\n                                            .map(i => {\n                                            return (\n                                                <MediaCard \n                                                    key={i._id} \n                                                    image={i} \n                                                    handleSave={props.handleSave}\n                                                    handleDelete={props.handleDelete}\n                                                />\n                                            )\n                                        })} \n                                    </CardContent>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                }\n        </Fragment>\n    )\n}","import React, {useState, useEffect, Fragment} from 'react';\nimport {Route} from 'react-router-dom'\nimport Home from './Home'\nimport Search from './Search'\nimport Favourites from './Favourites'\nimport axios from 'axios'\n\nexport default function Container(props) {\n\n    const [favouriteImages, setFavouriteImages] = useState([])\n    const getAllImages = async () => {\n        axios.get('http://localhost:3001/image')\n            .then(images => {\n                images.data.forEach(i => i.isSaved = true)\n                setFavouriteImages(images.data)\n        })\n    }\n\n    useEffect(() => {\n        getAllImages()\n    }, [])\n\n    const handleSave = async (image) => {\n        const allImages = [...favouriteImages]\n        const imageFound = allImages.find(i => i._id === image._id)\n        if(imageFound) {\n            imageFound.isSaved = true\n            setFavouriteImages(allImages)\n            await axios.post(`http://localhost:3001/image/save`, image)\n        } else {\n            await axios.post(`http://localhost:3001/image/save`, image)\n            getAllImages()\n        }\n        props.handleClick('Saved')\n    }\n\n    const handleDelete = async (imageId) => {\n        const allImages = [...favouriteImages]\n        const image = allImages.find(i => i._id === imageId)\n        image.isSaved = false\n        setFavouriteImages(allImages)\n        await axios.delete(`http://localhost:3001/image/${imageId}`)\n        props.handleClick('Removed')\n    }\n\n    return (\n        <Fragment>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/search' \n                exact render={() => \n                    <Search \n                        favouriteImages={favouriteImages} \n                        handleSave={handleSave}\n                        handleDelete={handleDelete}\n                    />} \n            />\n            <Route exact path='/favourites' \n                exact render={() => \n                    <Favourites \n                        favouriteImages={favouriteImages} \n                        handleSave={handleSave}\n                        handleDelete={handleDelete}\n                        getAllImages={getAllImages}\n                    />} \n            />\n            <Route path='/favourite/:imageId' \n                  exact render={({ match }) => \n                  <Favourites \n                    match={match} \n                    favouriteImages={favouriteImages} \n                    handleSave={handleSave}\n                    handleDelete={handleDelete}\n                    getAllImages={getAllImages}\n                />}/>\n        </Fragment>\n    )\n}","import React, { useState } from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport Container from './components/Container'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Snackbar, SnackbarContent } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  snackbar: {\n    backgroundColor: '#6e57ba',\n    justifyContent: 'center'\n  }\n}))\n\nfunction App() {\n  const classes = useStyles();\n\n  const [snackbar, setOpen] = useState({open: false, message:''})\n\n  const handleClick = (message) => {\n    setTimeout(function(){\n      setOpen({open: false, message})\n    }, 2000)\n    setOpen({open: true, message})\n  }\n\n  return (\n    <Router>\n      <Grid\n        className={classes.root}\n        container\n        direction=\"row\"\n        justify=\"center\"\n      >\n        <NavBar />\n        <Container handleClick={handleClick} />\n        <Snackbar\n          anchorOrigin={{ vertical:'bottom', horizontal:'center' }}\n          open={snackbar.open}\n          key={'bottom' + 'center'}\n        >\n          <SnackbarContent \n            className={classes.snackbar}\n            message={`Item ${snackbar.message}`}\n          />\n        </Snackbar>\n      </Grid>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/kisspng-logo-nasa-insignia-vector-graphics-portable-networ-vasper-5c0bc49343c935.1278996415442750912777.162e4f4a.png\";","module.exports = __webpack_public_path__ + \"static/media/istockphoto-1141690154-170667a.a1daa95f.jpg\";"],"sourceRoot":""}